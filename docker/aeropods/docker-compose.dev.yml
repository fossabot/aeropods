version: '3.7'
services:
  # React container which builds static files.
  client:
    container_name: aeropods-client
    image: 'aeropods/client:latest'
    command: 'yarn run dev'
    build:
      context: ../../packages/client
      dockerfile: Dockerfile.dev
    volumes:
      - ../../packages/client:/client
      - /client/node_modules
  # Node.js container which holds express application.
  api:
    container_name: aeropods-api
    image: 'aeropods/api:latest'
    command: 'yarn run dev'
    build:
      context: ../../packages/api
      dockerfile: Dockerfile.dev
    volumes:
      - ../../packages/api:/api
      - /api/node_modules
  # Nginx container which connects a @aeropods/api and @aeropods/client services - providing access on localhost:80 to client, and localhost:80/api/ to API. In future there will be third service responsible for website and @aeropods/client will be moved to localhost:80/app/
  server:
    container_name: aeropods-server
    image: 'aeropods/server:latest'
    build:
      context: ../../packages/server
      dockerfile: Dockerfile.dev
    ports:
      - '80:80'
    links:
      - client
      - api
  # Postgres database container, which is used by @aeropods/api service, whole configuration is based on .env files so please make sure you set important variables in your .env file.
  postgres:
    container_name: aeropods-postgres
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - ./.cache/postgres:/var/lib/postgresql/data
  # Experimental Prisma service which will be integraded into @aeropods/api package in incomming versions as a secondary option for database management.
  prisma:
    container_name: aeropods-prisma
    image: prismagraphql/prisma:1.34
    ports:
      - 4466:4466
    environment:
      PRISMA_CONFIG: |
        port: 4466
        databases:
          default:
            connector: postgres
            host: postgres
            port: 5432
            user: ${DATABASE_USERNAME}
            password: ${DATABASE_PASSWORD}
